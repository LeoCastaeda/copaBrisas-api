// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

 generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model City {
  id        Int       @id @default(autoincrement())
  name      String
  bookings  Booking[]
}

model Customer {
  id        Int       @id @default(autoincrement())
  name      String
  phone     String
  email     String
  bookings  Booking[]
  reviews   Review[]
}

model Vehicle {
  id        Int       @id @default(autoincrement())
  plate     String    @unique
  brand     String
  model     String
  bookings  Booking[]
}

model Service {
  id        Int       @id @default(autoincrement())
  name      String
  price     Float
  bookings  Booking[]
}

model Booking {
  id         Int       @id @default(autoincrement())
  date       DateTime
  customer   Customer  @relation(fields: [customerId], references: [id])
  customerId Int
  city       City      @relation(fields: [cityId], references: [id])
  cityId     Int
  service    Service   @relation(fields: [serviceId], references: [id])
  serviceId  Int
  vehicle    Vehicle   @relation(fields: [vehicleId], references: [id])
  vehicleId  Int
  status     String    // pendiente, confirmado, cancelado, etc.
}

model Review {
  id          Int      @id @default(autoincrement())
  content     String
  rating      Int
  customer    Customer @relation(fields: [customerId], references: [id])
  customerId  Int
  createdAt   DateTime @default(now())
}
